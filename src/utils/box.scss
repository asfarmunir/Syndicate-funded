.box {

    --border-angle: 0turn; // For animation.
    --main-bg: conic-gradient(from var(--border-angle),
            #213,
            #112 5%,
            #112 60%,
            #213 95%);

    border: solid 5px transparent;
    --gradient-border: conic-gradient(from var(--border-angle), transparent 25%, #4a16aa6d, #5c1ecfc0 99%, transparent);

    background:
        // padding-box clip this background in to the overall element except the border.
        var(--main-bg) padding-box,
        // border-box extends this background to the border space
        var(--gradient-border) border-box,
        // Duplicate main background to fill in behind the gradient border. You can remove this if you want the border to extend "outside" the box background.
        var(--main-bg) border-box;

    background-position: center center;

    animation: bg-spin 8s linear infinite;

    @keyframes bg-spin {
        to {
            --border-angle: 1turn;
        }
    }

    // &:hover {
    //     animation-play-state: paused;
    // }
}

@property --border-angle {
    syntax: "<angle>";
    inherits: true;
    initial-value: 0turn;
}



.box2 {
    --start-angle1: 330deg;
    /* Adjusts the starting point of the first beam */
    --start-angle2: 340deg;
    /* Adjusts the starting point of the second beam */
    --border-angle1: var(--start-angle1);
    --border-angle2: var(--start-angle2);

    /* Define the main background */
    --main-bg: conic-gradient(from var(--border-angle1),
            black,
            black 5%,
            black 60%,
            black 95%);

    border: solid 3px transparent;

    /* Define the two gradient borders with limited range */
    --gradient-border1: conic-gradient(from var(--border-angle1),
            transparent 0deg,
            #4a16aa6d 10deg,
            #5c1ecfc0 30deg,
            transparent 45deg);

    --gradient-border2: conic-gradient(from var(--border-angle2),
            transparent 0deg,
            #4a16aa6d 10deg,
            #5c1ecfc0 30deg,
            transparent 45deg);

    background:
        var(--main-bg) padding-box,
        var(--gradient-border1) border-box,
        var(--gradient-border2) border-box,
        var(--main-bg) border-box;

    background-position: center center;

    /* Rotate both gradients in opposite directions, stopping halfway */
    animation: bg-spin1 2s linear infinite, bg-spin2 2s linear infinite;

    /* Rightward rotation (halfway only) */
    @keyframes bg-spin1 {
        0% {
            --border-angle1: var(--start-angle1);
        }

        100% {
            --border-angle1: calc(var(--start-angle1) + 0.24turn);
            /* Move halfway and restart */
        }
    }

    /* Leftward rotation (halfway only) */
    @keyframes bg-spin2 {
        0% {
            --border-angle2: var(--start-angle2);
        }

        100% {
            --border-angle2: calc(var(--start-angle2) - 0.24turn);
            /* Move halfway and restart */
        }
    }

    // &:hover {
    //     animation-play-state: paused;
    // }
}

/* Register CSS properties for the animation */
@property --border-angle1 {
    syntax: "<angle>";
    inherits: true;
    initial-value: 0turn;
}

@property --border-angle2 {
    syntax: "<angle>";
    inherits: true;
    initial-value: 0turn;
}

.box3 {
    --start-angle1: 270deg;
    /* Adjusts the starting point of the first beam */
    /* Adjusts the starting point of the second beam */
    --border-angle1: var(--start-angle1);
    --border-angle2: var(--start-angle2);

    /* Define the main background */
    --main-bg: conic-gradient(from var(--border-angle1),
            black,
            black 5%,
            black 60%,
            black 95%);

    border: solid 3px transparent;

    /* Define the two gradient borders with limited range */
    --gradient-border1: conic-gradient(from var(--border-angle1),
            transparent 0deg,
            #4a16aa6d 10deg,
            #5c1ecfc0 180deg,
            black 270deg);

    --gradient-border2: conic-gradient(from var(--border-angle2),
            transparent 0deg,
            transparent 10deg,
            transparent 30deg,
            transparent 360deg);
            

    background:
        var(--main-bg) padding-box,
        var(--gradient-border1) border-box,
        var(--main-bg) border-box;

    background-position: center center;

    /* Rotate both gradients in opposite directions, stopping halfway */
    animation: bg-spin1 2s linear infinite;

    /* Rightward rotation (halfway only) */
    @keyframes bg-spin1 {
        0% {
            --border-angle1: var(--start-angle1);
        }

        100% {
            --border-angle1: calc(var(--start-angle1) + 0.24turn);
            /* Move halfway and restart */
        }
    }

    /* Leftward rotation (halfway only) */
    @keyframes bg-spin2 {
        0% {
            --border-angle2: var(--start-angle2);
        }

        100% {
            --border-angle2: calc(var(--start-angle2) - 0.24turn);
            /* Move halfway and restart */
        }
    }

    // &:hover {
    //     animation-play-state: paused;
    // }
}

/* Register CSS properties for the animation */
@property --border-angle1 {
    syntax: "<angle>";
    inherits: true;
    initial-value: 0turn;
}

@property --border-angle2 {
    syntax: "<angle>";
    inherits: true;
    initial-value: 0turn;
}









.box4 {
    --start-angle: -20deg;
    /* Starting angle at 90 degrees */
    --end-angle: 90deg;
    /* Ending angle at 180 degrees */
    --border-angle4: var(--start-angle);

    /* Main background */
    

    border: solid 3px transparent;

    /* Gradient border with limited beam range */
    --gradient-border: conic-gradient(from var(--border-angle4),
            transparent 0deg,
            /* Transparent start */
            #4a16aa6d 10deg,
            /* Beam color start */
            #5c1ecfc0 45deg,
            /* Beam peak color */
            transparent 90deg
            /* Transparent end */
        );

    background:
        var(--main-bg) padding-box,
        var(--gradient-border) border-box,
        var(--main-bg) border-box;

    background-position: center center;

    /* Animate beam from 90 to 180 degrees */
    animation: beam-move 2s ease-in-out infinite;

    /* Keyframes to animate only from 90 to 180 degrees */
    @keyframes beam-move {
        0% {
            --border-angle4: var(--start-angle);
            /* Start at 90 degrees */
        }

        100% {
            --border-angle4: var(--end-angle);
            /* Move to 180 degrees */
        }
    }
}

/* Register CSS property for border-angle4 */
@property --border-angle4 {
    syntax: "<angle>";
    inherits: true;
    initial-value: 0deg;
}